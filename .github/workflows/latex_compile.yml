# This is a basic workflow to help you get started with Actions

name: compile pdf

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildPython:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/islandoftex/images/texlive:TL2025-2025-05-11-full
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: update apt-get
        run: apt-get update
      - name: install build-essential, python3-dev, python3-full, python3-venv
        run: |
          apt-get install -y build-essential
          apt-get install -y python3-dev
          apt-get install -y python3-full
          apt-get install -y python3-venv
      - name: create venv
        run: python3 -m venv venv
      - name: update pip in venv
        run: |
          . venv/bin/activate
          python3 -m pip install --upgrade pip
      - name: install requirements into venv
        run: |
          . venv/bin/activate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Make the plots
        run: |
          . venv/bin/activate
          make fig_python
      - name: 'Upload PDFs as artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: compiledFigPDFs
          path: fig/*.pdf
  buildPdf:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # only run after python figures are done
    needs: buildPython
    container:
      image: registry.gitlab.com/islandoftex/images/texlive:TL2025-2025-05-11-full

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: get short SHA
        # for having the short SHA available later
        id: vars
        run: echo "sha_short=$( echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
      # download archived fig pdfs
      - uses: actions/download-artifact@v4
        with:
          name: compiledFigPDFs
          path: fig/

      # compile pdf (also pure tikz figures)
      - name: LaTeX compilation from makefile
        run: make

      - name: 'Upload main PDF as artifact'
        uses: actions/upload-artifact@v4
        with:
          name: compiledPDF
          path: |
            fig_tikz/**/*.pdf
            main.pdf

      # check if there are any changes to the 'compiledpdf' build (for scheduled, dispatched, and PR runs)
      - name: diff-pdf; install
        if: ${{ (github.event_name == 'schedule') || (github.event_name == 'pull_request') || (github.event_name == 'workflow_dispatch') }}
        run: |
          apt-get update
          apt-get install -y make automake g++
          apt-get install -y libpoppler-glib-dev poppler-utils libwxgtk3.2-dev
          git clone https://github.com/vslavik/diff-pdf
          cd diff-pdf
          ./bootstrap
          ./configure
          make
          make install
      - name: diff-pdf; get ground truth and compare
        if: ${{ (github.event_name == 'schedule') || (github.event_name == 'pull_request') || (github.event_name == 'workflow_dispatch') }}
        id: diffingPDFs
        continue-on-error: true
        run: |
          git config --global --add safe.directory $PWD
          git fetch origin compiledPDF
          git show FETCH_HEAD:main.pdf > compiledPDF_main.pdf
          make comparePDF
      - name: diff-pdf; upload diff
        if: steps.diffingPDFs.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: comparePDF_diff
          path: diff_main_compiledPDF.pdf
      - name: diff-pdf; fail if difference is detected
        if: ${{ (steps.diffingPDFs.outcome == 'failure') && (github.event_name == 'schedule') }}
        run: |
          echo "Previous step diffingPDFs detected differences in the pdf."
          echo "Check the artifact 'comparePDF_diff' for the differences."
          exit 1
      - name: diff-pdf; if PR, post to PR thread
        if: ${{ (steps.diffingPDFs.outcome == 'failure') && (github.event_name == 'pull_request') }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'This PR (latest commit [`${{ steps.vars.outputs.sha_short }}`](${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}/commits/${{ github.event.pull_request.head.sha }})) produces a change compared to the current `HEAD`. \nCheck the artifact of the run, probably at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })

      # push to other branch for retainig the pdfs
      - name: save all stuff online
        if: ${{ (github.ref == 'refs/heads/main') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch')) }}
        run: |
          ls **/*.pdf || true
          git config --global --add safe.directory $PWD
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f main.pdf
          git add -f fig/*.pdf || true
          git add -f fig_tikz/fig*/*.pdf || true
          git checkout -b compiledPDF
          git commit -m "new pdfs"
          git push --force origin compiledPDF
