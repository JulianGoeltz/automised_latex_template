# This is a basic workflow to help you get started with Actions

name: compile pdf

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildPython:
    runs-on: ubuntu-latest
    container:
      image: texlive/texlive
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: clone other repository
        run: |
          cd ..
          git clone --branch=debug_GHactions https://github.com/JulianGoeltz/automised_latex_template temp
          diff --recursive --exclude "objects" temp automised_latex_template
      - name: debug the (later) save step
        run: |
          ls **/*.pdf || true
          pwd
          ls -lAh
          git --version
          which git
          echo $USER
          touch blablabla
          ls -lAh blablabla
          ls -lAh .git
          cat .git/HEAD
          git init
          git config --list --system
          git config --list --global
          git config --list --local
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f main.pdf
          git add -f fig/*.pdf || true
          git add -f fig_tikz/fig*/*.pdf || true
          git checkout -b compiledPDF
          git commit -m "new pdfs"
      - name: update apt-get
        run: apt-get update
      - name: install build-essential, python3-dev, python3-full, python3-venv
        run: |
          apt-get install -y build-essential
          apt-get install -y python3-dev
          apt-get install -y python3-full
          apt-get install -y python3-venv
      - name: create venv
        run: python3 -m venv venv
      - name: update pip in venv
        run: |
          . venv/bin/activate
          python3 -m pip install --upgrade pip
      - name: install requirements into venv
        run: |
          . venv/bin/activate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Make the plots
        run: |
          . venv/bin/activate
          make fig_python
      - name: 'Upload PDFs as artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: compiledFigPDFs
          path: fig/*.pdf
  buildPdf:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # only run after python figures are done
    needs: buildPython
    container:
      image: texlive/texlive

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: true
      # download archived fig pdfs
      - uses: actions/download-artifact@v3
        with:
          name: compiledFigPDFs
          path: fig/

      # compile pdf (also pure tikz figures)
      - name: LaTeX compilation from makefile
        run: make

      - name: 'Upload main PDF as artifact'
        uses: actions/upload-artifact@v3
        with:
          name: compiledPDF
          path: |
            fig_tikz/**/*.pdf
            main.pdf
      # push to other branch for retainig the pdfs
      - name: save all stuff online
        if: github.ref == 'refs/heads/main'
        run: |
          ls **/*.pdf || true
          pwd
          ls -lAh
          git --version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f main.pdf
          git add -f fig/*.pdf || true
          git add -f fig_tikz/fig*/*.pdf || true
          git checkout -b compiledPDF
          git commit -m "new pdfs"
          git push --force origin compiledPDF
